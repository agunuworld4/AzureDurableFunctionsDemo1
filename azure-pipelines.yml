resources:
- repo: self
  clean: true

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  
steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    packagesToPack: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

#- task: DotNetCoreCLI@2
#  displayName: Test
#  inputs:
#    command: 'test'
#    packagesToPack: '**/AzureDurableFunctionsDemo1.Tests.csproj'
#    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: 'publish'
    packagesToPack: '**/AzureDurableFunctionsDemo1.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.ArtifactStagingDirectory)'
    zipAfterPublish: true
    publishWebProjects: false

- task: CmdLine@2
  displayName: Terraform Install
  inputs:
    script: choco install terraform

- task: CmdLine@2
  displayName: Terraform Init
  inputs:
    script: terraform init -input=false -backend=false deployment\terraform

- task: CmdLine@2
  displayName: Terraform Validate (DEV)
  inputs:
    script: terraform validate -var-file="deployment\terraform\envDev.tfvars" -var client_id=test -var client_secret=test -var tenant_id=test -var subscription_id=test -var FunctionAppName=test deployment\terraform

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts: App'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'app'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts: Terraform'
  inputs:
    pathtoPublish: 'deployment\terraform'
    ArtifactName: 'terraform'
